// <auto-generated />
using System;
using ApiPaplria.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPaplria.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiPaplria.Models.Alumno", b =>
                {
                    b.Property<int>("NumCtrl")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumCtrl");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("ApiPaplria.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalle")
                        .HasColumnType("int");

                    b.Property<int>("CantidadProd")
                        .HasColumnType("int");

                    b.Property<int>("IdPro")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdPro");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetallesVenta");
                });

            modelBuilder.Entity("ApiPaplria.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<string>("CuentaDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoTrans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdVenta");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("ApiPaplria.Models.Producto", b =>
                {
                    b.Property<int>("IdPro")
                        .HasColumnType("int");

                    b.Property<string>("Descrip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdPro");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ApiPaplria.Models.Puntos", b =>
                {
                    b.Property<int>("NumCtrl")
                        .HasColumnType("int");

                    b.Property<decimal>("PuntosDisponibles")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NumCtrl");

                    b.ToTable("Puntos");
                });

            modelBuilder.Entity("ApiPaplria.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<int>("ClienteNumCtrl")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("PtsGenerados")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdVenta");

                    b.HasIndex("ClienteNumCtrl");

                    b.HasIndex("IdCliente");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ApiPaplria.Models.DetalleVenta", b =>
                {
                    b.HasOne("ApiPaplria.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdPro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiPaplria.Models.Venta", "Venta")
                        .WithMany("Detalles")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ApiPaplria.Models.Pago", b =>
                {
                    b.HasOne("ApiPaplria.Models.Venta", null)
                        .WithMany()
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiPaplria.Models.Puntos", b =>
                {
                    b.HasOne("ApiPaplria.Models.Alumno", null)
                        .WithOne()
                        .HasForeignKey("ApiPaplria.Models.Puntos", "NumCtrl")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiPaplria.Models.Venta", b =>
                {
                    b.HasOne("ApiPaplria.Models.Alumno", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteNumCtrl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiPaplria.Models.Alumno", null)
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiPaplria.Models.Venta", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
